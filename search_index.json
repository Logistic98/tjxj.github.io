[["index.html", "R2ML 第 1 章 机器学习入门指南（极简版） 1.1 Python——书 1.2 Python——教程 1.3 Python——视频 1.4 机器学习——书 1.5 机器学习——教程 1.6 机器学习——视频 1.7 机器学习——数学基础 1.8 一些经验和建议", " R2ML By:玩机器学习的张北海 2021-12-31 第 1 章 机器学习入门指南（极简版） 我更倾向于把它称为一本百科百科全书，我会把基础框架搭好并开源，每一个章节，大家如果有更好的文章可以投稿给我，或者在github提交代码 https://github.com/tjxj/bookdown-r2ml 由于内容过于庞大，大家可以优先看一下这个极简版，分享我机器学习之路看过的一些书、教程、视频，还有学习经验和建议，希望能对大家的学习有所帮助。 1.1 Python——书 之前跟出版社合作，书柜里积攒了很多Python相关的书，这里推荐三本最有价值的吧。 《流畅的Python》，很厚，比较全面，可以作为工具书常常翻看。 《 从入门到实践（第2版）》 非常全面，对新手还算友好，里面有很多的练习项目非常不错。 《利用Python进行数据分析·第2版》 数据分析入门必读书，主要介绍了python 3个库numpy（数组），pandas（数据分析）和matplotlib（绘图）的学习。有开源版，就不用买了，下载链接及代码如下： https://github.com/iamseancheney/python_for_data_analysis_2nd_chinese_version 1.2 Python——教程 学习Python最好的入门线上教程，首推Python官方文档 https://docs.python.org/zh-cn/3/tutorial/index.html 官方文档足够详细和系统，但是内容太庞大，学习来会有点吃力，我建议只看tutorial即可，就是上面的链接。 直接啃官方文档的教材，不如老师讲给你听来的效率高。廖雪峰的Python新手教程也是个不错的选择，每一节都有练习题，学习来更顺畅，对新手很友好。 https://www.liaoxuefeng.com/wiki/1016959663602400 机器学习最常用的库少不了Numpy Pandas Matplotlib这些库我觉得看官方文档就好了，不过英文不好的同学可能就不满意了，这里分别列一下这些库的官方文档和我觉得很不错的中文教程，提醒一下哈，官方文档只需要看我列出的链接即可。 Numpy 官方文档：https://numpy.org/doc/stable/user/quickstart.html 中文教程：https://www.numpy.org.cn/user/quickstart.html Pandas 官方文档：https://pandas.pydata.org/docs/user_guide/10min.html 中文教程：https://www.pypandas.cn/docs/getting_started/10min.html Matplotlib 官方文档：https://matplotlib.org/stable/tutorials/introductory/usage.html 中文教程：https://www.matplotlib.org.cn/tutorials/ 1.3 Python——视频 实话实话，我没有完整的看过任何Python视频。归根结底，Python入门很简单，看视频效率太低。传言B站的[小甲鱼]零基础入门学习Python不错，简单看了一眼，确实0基础。我们用Python是用来学机器学习的，喜欢看视频学习的同学可以看看，建议只看P1-P53即可。 《零基础入门学习Python》：https://www.bilibili.com/video/av27789609 1.4 机器学习——书 市面上凡推荐机器学习的书，都少不了李航的《统计学习方法》和周志华的《机器学习》，我当初也是看了大佬推荐，在这两本书上耗费了极多的时间。但这两本我觉得都很不适合入门，尤其是统计学习方法，简直就是上等武功秘籍，太过精炼，啃起来太吃力。对比起来周老师的《机器学习》相对好点，其中有些公式推导有点跳，Datawhale 出了一本开源的《机器学习公式详解》是个很好的补充。周世华的《机器学习》是必不可少的工具书，还是必读的，而且要反复阅读，不过建议在看过视频教程之后。 https://datawhalechina.github.io/pumpkin-book 偏应用的书，只推荐一本，其他的都不要看！！！：《机器学习实战：基于Scikit-Learn、Keras和TensorFlow（原书第2版）》，入门可以先看前 9 章。 市面上很少有书能够把机器学习在业务层面的应用介绍清楚，比如模型解释、模型上线，模型监控等等，没有看到特别详细的，有一本还算满意，就是知名度比较低：《机器学习：软件工程方法与实现。 《机器学习：软件工程方法与实现》 现在无论是竞赛还是工业界，boost模型都应用十分广泛，分类、回归、排序，XGBoost都能搞。最后再介绍一本我认为的必读：《深入理解XGBoost：高效机器学习算法与进阶》，作者是XGBoost开源社区贡献者何龙。这本书以机器学习基础知识做铺垫，深入剖析了XGBoost的原理、分布式实现、模型优化、深度应用等。 1.5 机器学习——教程 教程没有看到太好的，除了sklearn的文档，只推荐吴恩达、李宏毅、林轩田三位老师的视频课件。课件这里不单独列出来了，下载链接我放到思维导图里了。 Sklearn 官方文档：https://scikit-learn.org/stable/user_guide.html 中文教程：https://sklearn.apachecn.org/ 1.6 机器学习——视频 与Python不同，机器学习基础我觉得最好还是跟着视频学，因为初学机器学习算法，涉及很多公式推导，非常难理解，跟着视频学起来会轻松不少。 视频首推吴恩达的公开课，这是学习机器学习基础知识的最好的课程。英语不好的同学也不要担心，视频是有中文字幕的。 https://www.bilibili.com/video/BV164411b7dx 作为补充，时间充裕的同学可以看看台大李宏毅的机器学习公开课，特点是中文授课，比较轻松愉快。 https://www.bilibili.com/video/BV1pE411g7Wi 时间更充裕的也可以看看林轩田的视频课，只看基石部分即可。 https://www.bilibili.com/video/BV1Ft41197Dy 1.7 机器学习——数学基础 系统地学习机器学习所必须的数学知识 数学基础这一块是个无底洞，不太建议大家耗费过多时间，用到了再补也不迟。 也不建议大家看书，基础确实特别薄弱的同学，推荐一本：《机器学习的数学》，这本书特别全面的介绍了微积分、线性代数、概率统计、信息论、随机过程、图论等内容。再强调一遍，此书仅适于基础特别薄弱的同学。 我感觉机器学习中用到最多的应该是线代，喜欢看视频的可以看看李宏毅的机器学习中的线性代数： https://www.bilibili.com/video/BV1G7411f7BE/ 或者3blue1brown：线性代数的本质 https://www.bilibili.com/video/BV1Ys411k7yQ 其他数学基础相关的电子书，我也放到思维导图中了。 1.8 一些经验和建议 1、我敢肯定很多初学者都是资料收集爱好者，越攒越多反而不知道从何开始。我强烈建议把资料都扔掉，以我的这一套为准，一以贯之的学下去。 2、就像前面我提到的，很多东西先不要深究，不要在某些地方卡太久（比如数学部分，比如编程基础），先学下去，学完。了解大的框架之后，以后用到哪里，再回过来补也不迟。 3、机器学习的各种算法没必要样样精通，常用的比如LR、树模型、RF、XGBoost等等掌握好就不错了。 4、我身边一些优秀的程序员、分析师、工程师都非常推崇“做中学，学中做”，无论是书本还是视频，看到一些好的方法和技巧，要立即自己实现一遍。看起来非常简单的东西，真真动手的时候才会发现自己的不足。快速学完上述内容就尽快开始实践吧，可以先复现天池或kaggle上优秀的notebook，然后就参与一些入门竞赛。 5、如果你已有工作，最好的还是在业务中寻找机器学习应用场景，然后尝试去开发一个适用的模型。不懂就搜索，学习。这是我所知最好的，最有价值的学习方法。 6、输出也是特别好的学习方式，输出就是把新学到的知识用某种方式讲给别人听，做到让他们也能理解、学会。我比较喜欢写笔记（我常用的是微软的OneNote），然后把笔记整理成文章发到博客上。这样不仅使对自己知识掌握程度的一种检验，发现薄弱点，也可以让大家共同监督，相互学习，教学相长。 OK，以上就是所有内容。欢迎与我交流，我的微信：hych666 欢迎关注我的公众号：机器学习算法与Python实战 "],["python基础.html", "第 2 章 Python基础 2.1 Python 2.2 Numpy 2.3 Pandas 2.4 Scipy 2.5 Matplotlib 2.6 工具和环境 2.7 如何阅读 Python 开源项目代码?", " 第 2 章 Python基础 2.1 Python 240个免费Python教程 python基础1| 索引与切片 编程大神的骚操作：Python技巧小贴士 分享30段Python代码，拿起来就能在工作中用！ 17个Python骚操作，你都Ok吗？ CuteCharts一个敲可爱的 Python 手绘风格可视化图表库 震惊了！每30秒学会一个Python小技巧 提速30倍！这个加速包让Python代码飞起来 Python隐藏技巧合集 8个流行的Python可视化工具包，你喜欢哪个？ 用 Python 手写十大经典排序算法 Python中zip()函数的解释和可视化 Python中enumerate函数的解释和可视化 Python中map函数的解释和可视化 细数这些python技巧，让你的Coding事半功倍~ 原始数据哪里找？这200个数据网站请收好！（附链接） 27 个问题，告诉你 Python 为什么如此设计？ Python数据分析之利用pymysql操作数据库 2.2 Numpy NumPy（Numeric Python）提供了许多高级的数值编程工具，如：矩阵数据类型、矢量处理，以及精密的运算库。专为进行严格的数字处理而产生。多为很多大型金融公司使用，以及核心的科学计算组织如：Lawrence Livermore，NASA 用其处理一些本来使用 C++，Fortran 或 Matlab 等所做的任务。 AI基础：Numpy简易入门 安利！这是我见过最好的NumPy图解教程 Python数据分析之numpy数组全解析 2.3 Pandas 十套练习，教你如何使用Pandas做数据分析 Python数据分析之Pandas读写外部数据文件 Python数据分析之pandas基本数据结构 Python数据分析之pandas数据选取 从Excel到Python：最常用的36个Pandas函数 2.4 Scipy 2.5 Matplotlib 数据分析最有用的25个 Matplotlib图 2.6 工具和环境 2.7 如何阅读 Python 开源项目代码? 阅读 Python 开源项目代码主要有如下三个原因： 在工作过程中遇到一些问题 Google 和 StackOverFlow 等网站找不到解决办法，只能去翻源码。 对某些项目或者方向非常感兴趣，希望深入。 学习遇到瓶颈需要汲取开源项目的经验和用法来做提高。 要有目的的阅读开源项目 没有目的的阅读开源项目就是耍流氓，浪费了时间，但是能学到的东西也很少。怎么样根据自身情况去阅读呢？ 和兴趣以及工作契合。举个例子，工作中没有机会用到 Celery 又不是想自己造个轮子，读它的源码做什么？所以要从平时能接触到的那些项目中选取。有时候不去看 Django 的代码，因为日常工作基本遇不到，遇到了现翻就好了。 一个方向只看一两个典型的就可以了。比如 Web 框架只看过 Bottle 和 Flask 的源码。 清楚自己看代码的目的。就是你看代码是想了解人家怎么设计、调试 BUG、还是只是想学习正确的编程用法呢？其实没有必要细抠每个代码细节，有时候当黑盒看，知道输入输出就可以了。 优秀的开源作者 和工作中看别人代码差不多，基本每个人、每个项目、每个团队都有自己写代码的风格，比如变量命名风格、某些语言特性使用方式、代码规范要求、目录风格等，其实开源项目的作者也是一样。看代码，如看人「团队」 kennethreitz Requests 和 Python-guide 作者。他还有一个非常励志的故事，有兴趣的可以看 谁说程序员不是潜力股？ mitsuhiko flask、Jinja2、werkzeug 和 flask-sqlalchemy 作者。 sigmavirus24 flake8、pycodestyle「原 pep 8」、requests、urllib3 等项目的主要贡献者和维护者。 ask Celery 及相关依赖的作者。 ajdavis mongo-python-driver「pymongo」、tornado 等项目的主要贡献者。 bitprophet fabric、paramiko「Python 的 ssh 库」作者。 前 2 个是公认的 Python 领域代码写的最好的、最有创意的工程师。 推荐一个非常厉害的项目 GitHub - aosabook/500lines(https://github.com/aosabook/500lines) 500 Lines or Less, 它里面包含了 22 个由该领域的专家完成，用不到 500 行的代码实现一个特定功能的子项目。连 Guido van Rossum 都亲自来写基于 asyncio 爬虫了，Nick Coghlan、ajdavis 也出场了。 "],["数学基础.html", "第 3 章 数学基础 3.1 机器学习与数学 3.2 统计学 3.3 概率论 3.4 微积分 3.5 线性代数 3.6 优化 3.7 工具 3.8 机器学习数学基础之误区", " 第 3 章 数学基础 机器学习理论是众多学科的交叉，在数学基础方面，应该补充哪些知识呢？ 机器学习中涉及的数学课程比较多，要想一下子去穷尽所有课程显然也不现实，大可不必打好所有的数学基础再去学机器学习，最好的做法是当你对机器学习本身的理解达到一定瓶颈的时候，你可以补一补一些相关的数学基础之后再回去看机器学习的问题也许会更快的有所突破。 凸优化 3.1 机器学习与数学 神经网络原来是这样和数学挂钩的 机器学习和数学模型应当是互补的关系 3.2 统计学 统计学中常用的数据分析方法汇总 统计学和机器学习到底有什么区别？ 推荐一个免费的统计学入门课程 现代统计学的发展史 统计学中常用的数据分析方法汇总 机器学习中的统计学——协方差矩阵 统计学公开课大盘点 数据分析师必须掌握的统计学知识！ 3.3 概率论 干货 | 机器学习、深度学习必懂的13种概率分布，附代码实现！ 概率论与数理统计公式整理(完整版) 吴恩达的 CS229的数学基础（概率论），有人把它做成了在线翻译版本！ 3.4 微积分 在线阅读！！机器学习数学精华：高等数学 3.5 线性代数 首发：吴恩达的 CS229的数学基础（线性代数），有人把它做成了在线翻译版本！ 3.6 优化 凸优化 算法系列：最优化问题综述 3.7 工具 Markdown数学公式语法手册 3.8 机器学习数学基础之误区 机器学习从业者不需要过度的把时间精力放在数学上，这个观点来自我比较喜欢的一位机器学习领域的大牛——微调@知乎，这是他较早之前在回答“如何看待「机器学习不需要数学，很多算法封装好了，调个包就行」这种说法？”中的观点，我深表认同。 大部分机器学习从业者不需要过度的把时间精力放在数学上，而该用于熟悉不同算法的应用场景和掌握一些调参技巧。好的数学基础可以使你的模型简洁高效，但绝非必要的先决条件。 原因如下： 即使你有了一定的数学功底，还是不知道怎么调参或者进行优化。这话说的虽然有点自暴自弃，但扪心自问在座的各位，当你发现accuracy不好、loss很高、模型已经overfitting了，你唰唰唰列列公式玩玩矩阵就知道问题出在哪里了吗？不一定。诚然，懂得更多的统计原理可以帮助推测问题出在了哪里，你可能换了一个loss function或者加了新的regularizer，但结果不一定会更好:( 数学基础之于机器学习从业者很像debugger之于码农，它给了你方向，但不能保证你一定可以解决问题。那怎么能解决问题？只有经验经验经验，别无他法，有时候甚至靠的是直觉。数学基础是好的内功基础，但你调包调多了，其实也慢慢能抓到一些感觉，不必看不起“调包侠”。 工业界可以应用的模型是很有限的，可调的参数也是有限的。工业界选择模型非常看重可解释性，效率，以及和整个系统的整合能力。举例，在我的工作中，大部分时间都在使用Regression和Decision Tree相关的算法（如 Random Forests）。是因为这两个算法最好么？不，恰恰是因为这两个算法稳定及高效，而且容易解释。对于这样的模型，你即使数学能力很强，能调整的参数也是有限的。根据网上的例子和经验，大量的工程师可以在数学基础稍弱的情况下做到很好的效果。 数学/统计知识已经成了既得利益者刻意为外来者建立的一道壁垒。不知道大家有多少人是从事过ML研究的。我个人的观察是做出成绩的ML研究人员是有限的，科班出身的researcher更是远远无法工业界的空缺。所以大家没有必要担心会被转行者抢了饭碗，也没有必要刻意鼓吹一定要懂矩阵，凸优化，等数学知识才配做机器学习。大家都是出来卖的，不必互相为难。说来惭愧，在工作中我常常跟老板说这个人不能用，你要用我这种科班出身的人，但我内心是不赞同的。每当我看到知乎上有人问机器学习怎么入门，结果大家立马推荐第一本就看PRML和Statitical Learning以及一大堆公开课和数学课的时候，我的内心是崩溃的。各位答主的目标是把所有人都吓回去还是秀一下优越感？ 理论模型和实际应用分的是两块不同的蛋糕。承接第2,3点，做理论研究的发力于突破，提出新的模型或者优化方法，做应用的致力于把模型应用于数据上，攫取商业价值。这两者不存在利益冲突，做理论的人有自带正统光环的优势，所以更该显得大度一些。只有“调包”的人越来越多，这个行业才会繁荣，因为证明技术落了地，可以带来实际价值。 行业的发展趋势是降低工具的使用难度，这让我们不必反复造轮子。亚马、逊谷歌、微软等各大平台都开放了他们的机器学习工具。以前人们还需要自己写各种模型，好一些的调一下sklearn，但现在Azure ML Studio已经方便到零代码了。年初的时候，我试了一下ML studio，简直方便的可怕，完全是图形拖动连接就可以建立模型，那一刻我仿似看到了自己即将失业。 文艺一点说，我们需要更包容的心态，切勿文人相轻。想要接触了解一门学科，应该先有兴趣，才有探索的积极性。就像我们第一次看到Hello word出现的样子，很多刚入行的人第一次看到机器学习能解决实际问题时，会产生浓厚的兴趣。 我怕的就是所谓的圈内人都说你必须要会矩阵分解，必须要会用trace算导数，必须会优化，才能开始学习机器学习。这个周期太长，很多人连开始的勇气都没有~我觉得不管怎么样，要先动手做起来，发现自己的不足，再去补充需要的东西。 既然学术是自由的，我们就打开大门，欢迎大家都进来坐坐。如果他/她不喜欢，欢迎到隔壁串门。但我们不要给自己家门垒了高高的台阶，说闲人勿进。久而久之，难免门可罗雀。 综上，我觉得应用机器学习模型和技巧既不能完全不懂数学，两眼一抹黑，也不该要求每个从业者都要精通各种数学理论。模型应用者要长存对理论的敬畏之心，不要总想搞个大新闻说“机器学习也不过如此”，但做理论的也不必觉得高人一等，别人都是二等公民。 https://www.zhihu.com/question/60064269/answer/172305599 "],["机器学习基础.html", "第 4 章 机器学习基础 4.1 机器学习的局限 4.2 数据清理和格式化 4.3 探索性数据分析 4.4 特征工程和特征选择 4.5 性能指标 4.6 优化方法 4.7 超参数调整 4.8 评估最佳模型 4.9 解释模型结果 4.10 资源推荐 4.11 面试&amp;竞赛经验", " 第 4 章 机器学习基础 机器学习术语表 一个完整机器学习项目流程总结 带你建立一个完整的机器学习项目 机器学习中的常识性问题 4.1 机器学习的局限 打破机器学习中的小数据集诅咒 机器学习是最容易得到错误结论的一种解决方案 要强大的“黑匣子”，还是“可解释”的机器学习 「机器学习」到底需要多少数据？ 机器学习，数据科学家与Bullshiter 更好的数据胜过更高级的算法 4.2 数据清理和格式化 数据预处理|关于标准化和归一化的一切 4.3 探索性数据分析 推荐收藏 | 100个数据分析常用指标和术语 1份优秀的数据分析报告，8步就能搞定！ 8个用于数据清洗的Python代码 10个可以快速用Python进行数据分析的小技巧 学会五种常用异常值检测方法，亡羊补牢不如积谷防饥 4.4 特征工程和特征选择 数据和特征决定了机器学习的上限，而模型和算法只是逼近这个上限而已。 为什么需要对数值类型的特征做归一化？ 在对数据进行预处理时，应该怎样处理类别型特征？ 推荐一款功能强大的特征选择工具 机器学习中特征选择怎么做？ 4.5 性能指标 分类之性能评估指标——Precision和Recall 深度研究：回归模型评价指标R2_score 分类模型评估指标汇总 模型评估指标AUC和ROC，这是我看到的最透彻的讲解 4.6 优化方法 每个程序员都应该收藏的算法复杂度速查表 【算法系列】凸优化的应用——Python求解优化问题（附代码） Dropout、梯度消失/爆炸、Adam优化算法，神经网络优化算法看这一篇就够了 用有趣的方式解释梯度下降算法 一文读懂梯度下降背后的数学原理几何 4.7 超参数调整 4.8 评估最佳模型 Python sklearn模型选择 十九种损失函数，你认识几个？ 【算法系列】Boosting 融合机器学习模型：一种提升预测能力的方法 4.9 解释模型结果 4.10 资源推荐 掌握机器学习算法的三重门，附资源推荐！ 《机器学习》资源清单和路线 4.11 面试&amp;竞赛经验 【干货】Kaggle 数据挖掘比赛经验分享 看腾讯广告算法大赛十强选手如何顺利拿下腾讯offer 数据挖掘竞赛利器-Stacking和Blending方式 15分钟进击Kaggle大赛top2% 百度机器学习实习三面试题及经验 22道机器学习常见面试题目 算法工程师面试的理想与现实 梳理十年Kaggle竞赛，看自然语言处理的变迁史 "],["机器学习模型.html", "第 5 章 机器学习模型 5.1 掌握机器学习算法的三重境界 5.2 100天搞定机器学习系统（连载中） 5.3 回归 5.4 决策树 5.5 主成分分析 5.6 随机森林 5.7 聚类 5.8 SVM 5.9 神经网络 5.10 降维 5.11 统计学习方法 5.12 西瓜书 5.13 速查手册", " 第 5 章 机器学习模型 各种分类算法的优缺点 收藏 | 数据分析师最常用的10个机器学习算法！ 回归、分类与聚类：三大方向剖解机器学习算法的优缺点（附Python和R实现） 来!一起捋一捋机器学习分类算法 5.1 掌握机器学习算法的三重境界 5.1.1 完整口述机器学习模型原理 这算是基本操作了，考验逻辑思维和表达能力。 5.1.2 手推机器学习算法原理 大家在学习《统计学习方法》或《机器学习》的时候，学完一章，要做到合上书，给你一张白纸，可以把本章算法每一步写的清清楚楚。这里顺便推荐一个我觉得非常不错的机器学习视频教程：shuhuai007大佬的《机器学习-白板推导系列》，大佬用21节课，在白板上一步一步推导算法，讲的非常详细，通俗易懂。 课程地址： https://space.bilibili.com/97068901/channel/detail?cid=54167 有好心的同学将板书做了整理，非常美观，已更新到第19章： https://github.com/ws13685555932/machine_learning_derivation 5.1.3 机器学习算法Python实现 这就比较考验代码能力了，虽然现在sklearn有现成的包可以调，还是建议大家将常见算法如LR、感知机、k近邻、贝叶斯、SVM、EM、Adaboost、决策树、随机森林、GBDT、XGBoost、聚类等等都试着用Python实现一下。这里推荐三个不错的资源： 作者用python实现了线性回归、逻辑回归、BP神经网络，SVM、K-Mean、PCA、异常检测等算法。 https://github.com/lawlite19/MachineLearning_Python 作者将统计学习方法第一版每一章的算法用自己的方式实现一遍，这可是被李航老师点赞的项目！ https://github.com/WenDesi/lihang_book_algorithm 普林斯顿博士后 David Bourgin 最近开源的项目：用 NumPy 手写所有主流 ML 模型，看了一下，代码可读性极强。 项目地址：https://github.com/ddbourgin/numpy-ml 文档地址：https://numpy-ml.readthedocs.io/ 5.2 100天搞定机器学习系统（连载中） 大家好，100天搞定机器学习前54天是对Avik-Jain开源项目100-Days-Of-ML-Code的翻译+自己的理解 https://github.com/Avik-Jain/100-Days-Of-ML-Code 但是这个项目到54天就鸽掉了，十分可惜。 从第55天开始，我将续写这个栏目。 由于之前的文章太多参考Avik-Jain，我也将不定期对之前的章节进行重置。欢迎star， https://github.com/tjxj/100-Days-Of-ML-Code 100天搞定机器学习|Day1数据预处理 100天搞定机器学习|Day2简单线性回归分析 100天搞定机器学习|Day3多元线性回归 100天搞定机器学习|Day4-6 逻辑回归 100天搞定机器学习|Day7 K-NN 100天搞定机器学习|Day8 逻辑回归的数学原理 100天搞定机器学习|Day9-12 支持向量机 100天搞定机器学习|Day11 实现KNN 100天搞定机器学习|Day13-14 SVM的实现 100天搞定机器学习|Day15 朴素贝叶斯 100天搞定机器学习|Day16 通过内核技巧实现SVM 100天搞定机器学习|Day17-18 神奇的逻辑回归 100天搞定机器学习|Day19-20 加州理工学院公开课：机器学习与数据挖掘 100天搞定机器学习|Day21 Beautiful Soup 100天搞定机器学习|Day22 机器为什么能学习？ 100天搞定机器学习|Day23-25 决策树及Python实现 100天搞定机器学习|Day26-29 线性代数的本质 100天搞定机器学习|Day 30-32 微积分的本质 100天搞定机器学习|Day33-34 随机森林 100天搞定机器学习|Day35 深度学习之神经网络的结构 100天搞定机器学习|Day36 深度学习之梯度下降算法 100天搞定机器学习|day37 无公式理解反向传播算法之精髓 100天搞定机器学习|day38 反向传播算法推导 100天搞定机器学习|day39 Tensorflow Keras手写数字识别 100天搞定机器学习|day40-42 Tensorflow Keras识别猫狗 100天搞定机器学习|day43 几张GIF理解K-均值聚类原理 100天搞定机器学习|day44 k均值聚类数学推导与python实现 100天搞定机器学习|day45-53 《Python数据科学手册》 100天搞定机器学习|day54 聚类系列：层次聚类原理及案例 100天搞定机器学习|Day55 最大熵模型 100天搞定机器学习|Day56 随机森林工作原理及调参实战（信用卡欺诈预测） 100天搞定机器学习|Day57 Adaboost知识手册(理论篇) 100天搞定机器学习|Day58 多分类机器学习中数据不平衡的处理（NSL-KDD 数据集+LightGBM) 100天搞定机器学习|Day59 硬核拆解GBDT 100天搞定机器学习|Day60 遇事不决，XGBoost 100天搞定机器学习|Day61 手算+可视化，彻底理解XGBoost 100天搞定机器学习|Day62 随机森林调参实战 番外： 100天搞定机器学习：模型训练好了，然后呢？ 100天搞定机器学习：写YAML配置文件 5.3 回归 常见的七种回归技术 机器学习算法之岭回归、Lasso回归和ElasticNet回归 【机器学习系列】广义线性模型 5.4 决策树 决策树（Decision Tree）ID3算法 决策树（Decision Tree）C4.5算法 决策树（Decision Tree）CART算法 【算法系列】决策树 ID3、C4.5、CART三种决策树的区别 [最全整理]关于决策树的一切 5.5 主成分分析 【算法系列】主成分分析的数学模型 【算法系列】主成分分析的几何意义 【算法系列】主成分分析的推导过程 5.6 随机森林 随机森林算法入门(python) 5.7 聚类 如何正确使用「K均值聚类」？ 四种聚类方法之比较 5.8 SVM SVM的数学推导原理 5.9 神经网络 无公式理解反向传播算法之精髓 5.10 降维 为什么要进行数据降维? 所谓降维，即用一组个数为 d 的向量 Zi 来代表个数为 D 的向量 Xi 所包含的有用信息，其中 d&lt;D，通俗来讲，即将高维度下降至低维度；将高维数据下降为低维数据。 通常，我们会发现大部分数据集的维度都会高达成百乃至上千，而经典的 MNIST，其维度都是 64。 但在实际应用中，我们所用到的有用信息却并不需要那么高的维度，而且每增加一维所需的样本个数呈指数级增长，这可能会直接带来极大的「维数灾难」;而数据降维就可以实现： 使得数据集更易使用 确保变量之间彼此独立 降低算法计算运算成本 去除噪音一旦我们能够正确处理这些信息，正确有效地进行降维，这将大大有助于减少计算量，进而提高机器运作效率。而数据降维，也常应用于文本处理、人脸识别、图片识别、自然语言处理等领域。 网上关于各种降维算法的资料参差不齐，同时大部分不提供源代码。这里有个 GitHub 项目整理了使用 Python 实现了 11 种经典的数据抽取(数据降维)算法，包括：PCA、LDA、MDS、LLE、TSNE 等，并附有相关资料、展示效果;非常适合机器学习初学者和刚刚入坑数据挖掘的小伙伴。 基于 Python 的 11 种经典数据降维算法 Word2Vec是如何工作的？它和LDA有什么区别与联系？ 5.11 统计学习方法 墙裂推荐！统计学习方法(第2版) [笔记, 代码] 《统计学习方法》极简笔记P2：感知机数学推导 《统计学习方法》极简笔记P3：k-NN数学推导 《统计学习方法》极简笔记P4：朴素贝叶斯公式推导 《统计学习方法》极简笔记P5：决策树公式推导 《统计学习方法》极简笔记P6：逻辑回归算法推导 5.12 西瓜书 《机器学习》周志华西瓜书 笔记/习题答案 5.13 速查手册 sklearn常用的API参数解析：sklearn.linear_model.LinearRegression sklearn.decomposition.PCA 参数速查手册 Ridge回归 sklearn API参数速查手册 "],["机器学习项目实战.html", "第 6 章 机器学习项目实战", " 第 6 章 机器学习项目实战 We have finished a nice book. "],["深度学习基础.html", "第 7 章 深度学习基础 7.1 资源推荐", " 第 7 章 深度学习基础 【深度学习】正则化入门 【算法系列】深度学习中的正则化 一文读懂深度学习：从神经元到BERT 吴恩达深度学习课程笔记（手绘插画） 机器学习、深度学习思维导图 专访Keras之父：关于深度学习、Keras的诞生和给初学者的建议 深度学习与传统 CS 的教学和课程有什么区别？ 万字长文！机器学习与深度学习核心知识点总结 深度学习初探：使用Keras创建一个聊天机器人 从 ReLU 到 GELU，一文概览神经网络的激活函数 跟着漂亮小姐姐从0到1学习Tensorflow 一文回顾深度学习十年发展 今日头条、抖音推荐算法原理全文详解！ 7.1 资源推荐 由川大一名优秀毕业生创建。这是一个整合 AI 相关知识的项目，通过广大网友的集思广益, 形成内容充实，覆盖全面的 AI 相关知识文集。 目前，该项目的 star 数已经超过 24000，有 6700 多次 Fork，项目地址： https://github.com/scutan90/DeepLearning-500-questions） 目前，全书有近 30 万字，初步分为 18 个章节。这 18 个章节涉及到深度学习的各个方面： 深度学习500问，以问答形式对常用的概率知识、线性代数、机器学习、深度学习、计算机视觉等热点问题进行阐述，以帮助自己及有需要的读者。 "],["工具和框架篇.html", "第 8 章 工具和框架篇 8.1 TensorFlow VS PyTorch 8.2 sklearn 8.3 Tensorflow 8.4 Pytorch 8.5 其他 8.6 IDE", " 第 8 章 工具和框架篇 有了这款自动补全代码神器，撸码速度提升N倍！ 8.1 TensorFlow VS PyTorch TensorFlow还是PyTorch？我建议你听我的 PyTorch称霸学界，TensorFlow固守业界，ML框架之争将走向何方？ 8.1.1 安装问题 手把手教你如何在阿里云ECS搭建Python TensorFlow Jupyter PyTorch在Windows下的安装 不能更详细的PyTorch环境安装与配置 8.2 sklearn 8.2.1 如何正确地实用sklearn &lt; img src=“./files/sklearn.png” alt=““&gt; By Andreas Muller–Scikit learn 的核心开发人员，书籍《Python 机器学习入门》的作者，哥伦比亚大学数据科学研究所的科学家、讲师。 1.对于 Scikit 学习，每个人都可能在使用管道。如果你不使用管道，那你可能有些地方做错了。2 年前，我们引入了列转换器，它允许你处理具有连续和分类变量的数据，或者处理其他类型 One-Hot 编码器时，一切都很好。 2。我在机器学习中看到的一个常见错误是没有对度量标准给予足够的关注。Scikit-learn 将精度用作默认度量。但一旦你有了一个不平衡的数据，准确度是一个可怕的指标。你真的应该考虑使用其他指标。我们不会改变默认的度量标准，因为准确性被广泛使用，而且有如此清楚的解释。但是，在机器学习中，查看其他度量并为你的用例考虑是否使用它们是最常见的问题。 什么是管道？如果它不准确，还有什么其他指标更适合机器学习？ 在 Scikit-learn 中，每个 ML 模型都封装在一个称为「估计器」的简单 python 类中。通常在机器学习过程中，你可能会有一个带有一系列预处理步骤的分类器。管道允许你封装所有预处理步骤、特征选择、缩放、变量编码等，以及通常在单个估计器中具有的最终监督模型。 所以你有一个对象来完成你所有的工作。它非常方便，能够使编写错误的代码出现的更少，因为它可以确保你正的训练集和测试集是一致的。最后，你应该使用交叉验证或网格搜索 CV。在这种情况下，重要的是所有的预处理都在交叉验证循环中进行。如果在交叉验证循环之外进行功能选择，可能会发生非常糟糕的事情。但在你的管道中，你知道一切都在交叉验证循环中。 8.2.2 sklearn入门及技巧篇 极简Scikit-Learn入门 Python数据分析之scikit-learn与数据预处理​ 8.3 Tensorflow 本项目是TensorFlow2.0学习笔记，主要参考官方文档，此外也添加个人许多个人使用心得体会等内容，本项目所有笔记也发布在博客园等平台，希望对你有所帮助。 TensorFlow2.0正式版在10月初已经发布，相比于1.X，2.0版的TensorFlow修改的不是一点半点，这些修改极大的弥补了1.X版本的反人类设计，提升了框架的整体易用性，绝对好评！ TensorFlow2.0（一）：基本数据结构——张量 TensorFlow2.0（二）：数学运算 TensorFlow2.0（三）：张量排序、最大最小值 TensorFlow2.0（四）：填充与复制 TensorFlow2.0（五）：张量限幅 TensorFlow2.0（六）：数据预处理中的Dataset TensorFlow2.0（七）：激活函数 TensorFlow2.0（八）：误差计算——损失函数总结 TensorFlow2.0（9）：TensorBoard可视化 TensorFlow2.0（10）：加载自定义图片数据集到Dataset TensorFlow2.0（11）：tf.keras建模三部曲 TensorFlow2.0（12）：模型保存与序列化 8.4 Pytorch 8.4.1 Pytorch教程 这次是由 Stéphane d’Ascoli, Andrei Bursuc和Timothée Lacroix一起带来的“利用 PyTorch 进行深度学习的实践之旅”课程。 这个教程的优点有这么几个： PPT讲解和实践教程穿插，好懂； 实践教程都是Github项目，数据、代码一应俱全； 教程特别详细，代码基础差也可以上手。 课程网址: http://www.dataflowr.com GitHub链接: https://github.com/mlelarge/dataflowr 8.4.2 算法实现 17种深度强化学习算法用Pytorch实现（附链接） 8.5 其他 科技公司最爱的50款开源工具，你都用过吗？ Excel表格中最经典的36个小技巧，全在这儿了 一千行MySQL命令 用手机玩转BP神经网络 这个神级编辑器给 Excel 加上了 Python 功能！ 强烈安利这款功能强悍的机器学习可视化工具 Python新工具：用三行代码提取PDF表格数据 8.6 IDE 效率提升利器！Jupyter Notebook快捷键汇总 Anaconda的使用-Spyder快捷键大全 JupyterLab：数据分析程序员的必备笔记神器 哪种Python IDE最适合你？这里有一份优缺点列表 "],["开源项目推荐.html", "第 9 章 开源项目推荐 9.1 R 9.2 数据集 9.3 其他", " 第 9 章 开源项目推荐 Github：五个评分最高的机器学习项目 Github标星3K+，热榜第三，一网打尽数据科学速查表 9.1 R BOOKDOWN官网（https://bookdown.org/）上有不少人发布了自己的电子书，完全免费开源，我筛选了5本感觉很不错的数据科学方面的书，打开图片下方链接即可阅读！ 5本数据科学电子书 https://r-graphics.org/ https://r4ds.had.co.nz/ https://rafalab.github.io/dsbook/ https://www.tidytextmining.com/ https://otexts.com/fpp2/ 9.2 数据集 机器学习中最大的数据集资源列表，作者整理了一个机器学习数据集相关的列表集合，可用于机器学习实验。 这种资源可以减少你在线查找数据集的时间，该数据集根据不同的用途/领域划分，包括：CV、NLP、自动驾驶、QA、音频和医疗。你还能根据许可证类型进行划分。 地址：https://www.datasetlist.com/ 9.3 其他 程序员接私活必备的 10 个开源项目！ 一个神奇的Python机器学习交互应用开放框架 "],["免费资料下载.html", "第 10 章 免费资料下载", " 第 10 章 免费资料下载 神经网络首看书《神经网络与机器学习，中英文版本PDF下载 北大「最优化：建模、算法与理论」新书, 附579页电子版与课件 B站资源推荐：复旦大学机器学习、深度学习公开课，附PDF课件下载 PPT课件下载！哈佛大学《CS50 Python人工智能入门课程 南京大学的Python数据分析课件 清华大学《高级机器学习课件和专家特邀报告 深度学习四大名著 免费下载~Python办公自动化全套代码 靠这2本算法书，我进入了梦寐以求的大厂！ 【高清大图下载】机器学习从入门到精通思维导图 机器学习圣经PRML中文版 经典教材《统计学习导论终于有Python版了（附下载） 【清华大学王东老师】现代机器学习技术导论.pdf 阿里达摩院《机器学习算法学习指南火了，限时开放下载！ 经典著作《机器学习：概率视角.pdf 斯坦福新书《决策算法，694页PDF免费下载 【经典书】机器学习统计学，476页pdf 80页笔记看遍机器学习基本概念、算法、模型 全球175所大学教材：《动手学深度学习（中文版下载） 清华大学出版！《机器学习导论PDF下载 美团《数据结构入门.PDF 开放下载！ 鸿蒙操作系统入门到精通.pdf 无意中发现的另一本 统计学入门好书 【经典书】机器学习统计学，476页pdf 机器学习基础教材-《统计学习与数据分析介绍免费pdf分享 87页新书《给数据科学家的python技能秘籍pdf 给专业选手的 Python 笔记 《基于PyTorch的自然语言处理》 吴恩达新书《Machine Learning Yearning》完整中文版 国家精品公开课：Python网络爬虫与信息提取+数据分析与可视化 华科数学系教授团队打造的概率与数理统计免费视频公开课 李航老师《统计学习方法》(第2版）课件分享，附下载 吴恩达点赞的深度学习精炼图笔记 "],["机器学习论文.html", "第 11 章 机器学习论文 11.1 如何高效读论文？ 来源：量子位 11.2 机器学习 11.3 深度学习必读论文", " 第 11 章 机器学习论文 11.1 如何高效读论文？ 来源：量子位 第一遍：快速预览，把握概要。 拿到一篇新论文，第一遍阅读要花多长时间？5-10分钟足以。 不是每一篇论文都干货满满，所以初次见面，先打个印象分，再决定是否继续，是更为高效的方法。 具体操作如下： 1、仔细阅读标题、摘要和简介。 2、先忽略内容，读一读文章中的每个小标题。 3、如果有数学内容，先大致浏览，确定其理论基础。 4、读结论。 5、浏览参考文献，如果有你已经读过的，把它们勾选出来。 如此读完第一遍，你需要问问自己以下几个问题： 1、分类：这是什么类型的论文？ 2、背景：与哪些其他论文相关？基于何种理论基础来分析问题？ 3、正确性：论文的假设看起来正确吗？ 4、贡献：论文的主要贡献是什么？ 5、清晰度：这篇论文写得好吗？ 当你心中有了这些答案，你也就知道自己该不该真正精读这篇论文了。 P.S. 这里也涉及到撰写论文的一个小技巧：结构尽量清晰，要点尽量突出，让审稿人第一遍就能get到。 第二遍：抓住重点，暂略细节 当你判定一篇论文值得一读，就可以把它加入第二遍阅读的队列。 第二遍阅读，就要好好看看论文内容了，投入的时间大概在1个小时左右。 不过，不要纠结于没见过的术语，也不要沉迷于证明推导的细节：把它们记下来，先略过。 这一遍阅读中，有两个小技巧： 1、仔细查看论文中的图表。关注一下细节：坐标轴是否正确标记？结论是否具有统计意义？往往细节之中，就能窥见真正出色的工作和水文之间的区别。 2、标记论文中涉及的、你并未读过的参考文献，之后进一步阅读。 读完第二遍，你应该能掌握论文内容，总结全文主旨了。 不过，有时候即使是这样读完一遍，也未必就能读懂论文：论文可能涉及你陌生的领域，有太多陌生术语；作者可能采用了你不了解的证明或实验技术；甚至，这篇论文可能写得不行。 那么，就进入最后一步吧。 第三遍：重构论文，注重细节 要想完全理解论文，就需要展开第三遍阅读：跟随作者的思路，在脑海中重现论文内容。 将重现的结果与实际论文进行比较，就可以轻松看出论文的创新点，找到文中隐含的假设，捕获隐藏在实验和技术分析中的潜在问题和引文缺失。 进入第三遍，最重要的事情强调三遍：细节！细节！细节！ 找出作者陈述中的每一个假设，亲自挑战它，提出自己的思考。如此，对于论文的证明和其中的技术，你便会有更为深刻的理解。 One More Thing：文献调研怎么做？ 说到读论文，是不是想起了被文献综述统治的恐惧？ Srinivasan Keshav教授同样有“三步法”要传授诸位。 首先，善用学术搜索引擎（如谷歌学术），找出3-5篇相关领域近期最高引用的论文。 &lt; img src=“./files/google.png” alt=““&gt; 了解这些论文的工作原理，阅读其中related work的部分。幸运的话，这些内容能直接帮你完成文献综述。 第二步，在这些论文的参考文献中找出其共同引用的论文，或重复出现的作者姓名。 访问这些关键人物的网站，查看他们近期发表的论文，也可以看看他们都参加了哪些顶级会议。 第三步，访问顶级会议的网站，浏览它们最近的会议记录。 通过“三遍论”的第一遍阅读快速识别高质量的相关工作。 汇总这一步中查找出的论文和第二步中的高引论文，基本上就能构成你文献综述的初版内容啦。 最后，三步法可以迭代进行。 11.2 机器学习 【干货收藏】人工智能必看的45篇论文 11.3 深度学习必读论文 1 ImageNet Classification with Deep Convolutional Neural Networks 下载地址：http://papers.nips.cc/paper/4824-imagenet-classification-with-deep-convolutional-neural-networks.pdf 2 Using Very Deep Autoencoders for Content Based Image Retrieval 下载地址：http://www.cs.toronto.edu/~hinton/absps/esann-deep-final.pdf 3 Learning Deep Architectures for AI 下载地址：http://www.iro.umontreal.ca/~lisa/pointeurs/TR1312.pdf 4 CMU’s list of papers 下载地址：http://deeplearning.cs.cmu.edu/ 5 Neural Networks for Named Entity Recognition zip 下载地址：https://nlp.stanford.edu/~socherr/pa4_ner.pdf 6 Geoff Hinton’s reading list (all papers) 下载地址：http://www.cs.toronto.edu/~hinton/deeprefs.html 7 Supervised Sequence Labelling with Recurrent Neural Networks 下载地址：http://www.cs.toronto.edu/~graves/preprint.pdf 8 Statistical Language Models based on Neural Networks 下载地址：http://www.fit.vutbr.cz/~imikolov/rnnlm/thesis.pdf 9 Training Recurrent Neural Networks 下载地址：http://www.cs.utoronto.ca/~ilya/pubs/ilya_sutskever_phd_thesis.pdf 10 Recursive Deep Learning for Natural Language Processing and Computer 下载地址：Vision https://nlp.stanford.edu/~socherr/thesis.pdf 11 Bi-directional RNN 下载地址：https://www.di.ufpe.br/~fnj/RNA/bibliografia/BRNN.pdf 12 LSTM 下载地址：http://web.eecs.utk.edu/~ielhanan/courses/ECE-692/Bobby_paper1.pdf 13 GRU - Gated Recurrent Unit 下载地址：https://arxiv.org/pdf/1406.1078v3.pdf 14 GFRNN 下载地址：https://arxiv.org/pdf/1502.02367v3.pdf 15 LSTM: A Search Space Odyssey 下载地址：https://arxiv.org/pdf/1503.04069v1.pdf 16 A Critical Review of Recurrent Neural Networks for Sequence Learning 下载地址：https://arxiv.org/pdf/1506.00019v1.pdf 17 Visualizing and Understanding Recurrent Networks 下载地址：https://arxiv.org/pdf/1506.02078v1.pdf 18 Wojciech Zaremba, Ilya Sutskever, An Empirical Exploration of Recurrent Network Architectures 下载地址：http://proceedings.mlr.press/v37/jozefowicz15.pdf 19 Recurrent Neural Network based Language Model 下载地址: http://www.fit.vutbr.cz/research/groups/speech/publi/2010/mikolov_interspeech2010_IS100722.pdf 20 Extensions of Recurrent Neural Network Language Model 下载地址：http://www.fit.vutbr.cz/research/groups/speech/publi/2011/mikolov_icassp2011_5528.pdf 21 Recurrent Neural Network based Language Modeling in Meeting Recognition 下载地址：http://www.fit.vutbr.cz/~imikolov/rnnlm/ApplicationOfRNNinMeetingRecognition_IS2011.pdf 22 Deep Neural Networks for Acoustic Modeling in Speech Recognition Speech 下载地址：http://cs224d.stanford.edu/papers/maas_paper.pdf 23 Reinforcement Learning Neural Turing Machines 下载地址：https://arxiv.org/pdf/1505.00521v1.pdf 24 Learning Phrase Representations using RNN Encoder-Decoder for Statistical Machine Translation 下载地址：https://arxiv.org/pdf/1406.1078v3.pdf 25 Google - Sequence to Sequence Learning with Neural Networks 下载地址：http://papers.nips.cc/paper/5346-sequence-to-sequence-learning-with-neural-networks.pdf 26 Memory Networks 下载地址：https://arxiv.org/pdf/1410.3916v10.pdf 27 Policy Learning with Continuous Memory States for Partially Observed Robotic Control 下载地址：https://arxiv.org/pdf/1507.01273v1.pdf 28 Microsoft - Jointly Modeling Embedding and Translation to Bridge Video and Language 下载地址：https://arxiv.org/pdf/1505.01861v1.pdf 29 Neural Turing Machines 下载地址：https://arxiv.org/pdf/1410.5401v2.pdf 30 Ask Me Anything: Dynamic Memory Networks for Natural Language Processing 下载地址：https://arxiv.org/pdf/1506.07285v1.pdf 31 Mastering the Game of Go with Deep Neural Networks and Tree Search 下载地址：https://www.nature.com/articles/nature16961 32 Batch Normalization 下载地址：https://arxiv.org/abs/1502.03167 33 Residual Learning 下载地址：https://arxiv.org/pdf/1512.03385v1.pdf 34 Image-to-Image Translation with Conditional Adversarial Networks 下载地址：https://arxiv.org/pdf/1611.07004v1.pdf 35 Berkeley AI Research (BAIR) Laboratory 下载地址：https://arxiv.org/pdf/1611.07004v1.pdf 36 MobileNets by Google 下载地址：https://arxiv.org/abs/1704.04861 37 Cross Audio-Visual Recognition in the Wild Using Deep Learning 下载地址：https://arxiv.org/abs/1706.05739 38 Dynamic Routing Between Capsules 下载地址：https://arxiv.org/abs/1710.09829 39 Matrix Capsules With Em Routing 下载地址：https://openreview.net/pdf?id=HJWLfGWRb 40 Efficient BackProp 下载地址：http://yann.lecun.com/exdb/publis/pdf/lecun-98b.pdf 41 Recognition with Deep Recurrent Neural Networks 下载地址：http://cs224d.stanford.edu/papers/maas_paper.pdf "],["杂谈.html", "第 12 章 杂谈", " 第 12 章 杂谈 数学史上10个备受质疑的伟大时刻 31 个惊艳的数据可视化作品，让你感受“数据之美”！ 上哔哩哔哩，探数学奥秘 山东省的小学生Python编程入门都学的什么？ 关于区块链，一些往事、一些八卦、一点看法 "],["联系作者.html", "第 13 章 联系作者 13.1 我的bilibili 13.2 给作者点杯咖啡", " 第 13 章 联系作者 这个专栏将首发至公众号，也欢迎添加我的私人微信，一起交流，也可合作将这个项目进行到底！ 另：欢迎关注我的微信公众号：机器学习算法与Python实战 13.1 我的bilibili https://space.bilibili.com/17868971/video 13.2 给作者点杯咖啡 "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
